[{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"preparation","dir":"Articles","previous_headings":"","what":"Preparation","title":"DataEditR","text":"order get started DataEditR, need install package CRAN load current R session: like use development version DataEditR can installed directly GitHub:","code":"install.packages(\"DataEditR\") library(DataEditR) devtools::install_github(\"DillonHammill/DataEditR\")"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"data-visualisation","dir":"Articles","previous_headings":"","what":"1. Data Visualisation","title":"DataEditR","text":"Simply supply data form matrix, data.frame data.table data_edit() view interactive table. example, wanted take look mtcars dataset:  data editor open RStudio \"dialog\" box default, can optionally displayed RStudio viewer pane web browser setting viewer \"viewer\" \"browser\" respectively. data editor automatically move row names inside table row indices can displayed left hand side aid navigation. finished exploring data, can close data editor hitting Done button top right corner. wish cancel changes made data, can select Cancel button top left corner unedited data returned.","code":"data_edit(mtcars) data_edit(mtcars,           viewer = \"browser\")"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"data-import","dir":"Articles","previous_headings":"","what":"2. Data Import","title":"DataEditR","text":"data_edit() uses dataInput module read form tabular data file viewing editing. default data_edit() use read.csv utils package read files, can changed reading function supplying name function read_fun argument. need pass additional arguments reading function, can supplied named list read_args argument.","code":"mtcars <- data_edit(\"mtcars.csv\",                     read_fun = \"read.csv\",                     read_args = list(header = TRUE)) head(mtcars) #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"data-manipulation","dir":"Articles","previous_headings":"","what":"3. Data Manipulation","title":"DataEditR","text":"data_edit() uses dataEdit module provide variety interactive data manipulation tools edit data. explore use tools :","code":""},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"addition-or-removal-of-rows-or-columns","dir":"Articles","previous_headings":"3. Data Manipulation","what":"3.1 Addition or removal of rows or columns","title":"DataEditR","text":"Rows columns can added data within data editor right clicking cell within table. display context menu options add remove rows columns.","code":"data_edit(mtcars)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"rename-rows-or-columns","dir":"Articles","previous_headings":"3. Data Manipulation","what":"3.2 Rename rows or columns","title":"DataEditR","text":"data_edit() full support editing row column names. Simply select cell want edit update value within table. outlined , row names appear within table row indices can displayed left-hand side. row indices edited. new row column names must unique!  prevent users editing column names, set col_names = FALSE supply names columns edited. example, wanted prevent users editing name mpg column:","code":"data_edit(mtcars) data_edit(mtcars,           col_names = \"mpg\")"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"resize-columns","dir":"Articles","previous_headings":"3. Data Manipulation","what":"3.3 Resize columns","title":"DataEditR","text":"size columns, go right-hand border cell containing name column drag cursor desired width.","code":"data_edit(mtcars)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"drag-to-fill","dir":"Articles","previous_headings":"3. Data Manipulation","what":"3.4 Drag to fill","title":"DataEditR","text":"Values cells can dragged cells selecting filled cells dragging box lower right hand corner.","code":"data_edit(mtcars)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"append-columns-or-rows","dir":"Articles","previous_headings":"3. Data Manipulation","what":"3.5 Append columns or rows","title":"DataEditR","text":"data_edit() can perform rbind cbind operations internally append new rows columns data prior editing. new rows columns supplied matrix data.frame row_bind col_bind arguments. binding rows columns, important note rows bound columns.","code":"# New column to add new_col <- matrix(rep(NA, nrow(mtcars)),                   ncol = 1,                   dimnames = list(NULL, \"test\")) # Edit data with new column added data_edit(mtcars,           col_bind = new_col)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"read-only-columns","dir":"Articles","previous_headings":"3. Data Manipulation","what":"3.6 Read-only columns","title":"DataEditR","text":"like prevent values edited certain columns, can supply names columns edited col_readonly argument. Users able edit values column name, reverted original values. example, wanted prevent mpg column edited:","code":"data_edit(mtcars,           col_readonly = \"mpg\")"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"data-creation","dir":"Articles","previous_headings":"","what":"4. Data Creation","title":"DataEditR","text":"can also use data_edit() interactively create data.frames scratch without coding.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"start-with-empty-template","dir":"Articles","previous_headings":"4. Data Creation","what":"4.1 Start with empty template","title":"DataEditR","text":"data supplied data_edit() empty data.frame constructed 10 rows columns. can build data.frame scratch adding new rows columns annotating cells.  dimensions template can controlled supplying vector form c(nrow, ncol) indicate number rows columns use.","code":"data_edit() data_edit(c(20, 15))"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"start-with-a-labelled-template","dir":"Articles","previous_headings":"4. Data Creation","what":"4.2 Start with a labelled template","title":"DataEditR","text":"Alternatively, can pass vector column names create data.frame template pre-defined column names.","code":"data_edit(c(\"Date\", \"Country\", \"Temperature\", \"Rainfall\", \"Visibility\", \"Humidity\"))"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"data-filtering","dir":"Articles","previous_headings":"","what":"5. Data Filtering","title":"DataEditR","text":"data_edit() provides useful interfaces selecting columns filtering rows dataset. makes easy export edit subsets dataset display portion data editing.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"column-selection","dir":"Articles","previous_headings":"5. Data Filtering","what":"5.1 Column Selection","title":"DataEditR","text":"Column selection supported dataSelect module can invoked selecting crosshairs icon. pop-window open series red buttons labelled names columns dataset. Simply click buttons columns want keep close window done. subsetted data displayed data editor editing. column selection can changed time selecting crosshairs icon, also additional buttons optionally add remove columns.","code":"data_edit(mtcars)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"row-selection","dir":"Articles","previous_headings":"5. Data Filtering","what":"5.2 Row Selection","title":"DataEditR","text":"Row filtering supported dataFilter module can invoked selecting filter icon. pop-window open series dropdown boxes. add filter, simply select Add Filter button indicate column, logic levels filter data. Individual filters can deleted selecting trash icon next relevant filter. filters can removed selecting Remove Filters buttons. created filters, close window filtered data displayed data editor editing.","code":"data_edit(mtcars)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"data-synchronisation","dir":"Articles","previous_headings":"5. Data Filtering","what":"5.3 Data Synchronisation","title":"DataEditR","text":"Changes made data subsets automatically synchronised complete dataset allow increased flexibility. However, possible synchronise changes selecting sync button. Currently, synchronising data subsets altered row/column numbers supported.","code":"data_edit(mtcars)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"export-data-subsets","dir":"Articles","previous_headings":"5. Data Filtering","what":"5.4 Export Data Subsets","title":"DataEditR","text":"data_edit() return complete dataset R object downstream use default. However, can select scissors icon like return just subset data working .","code":"mtcars_subset <- data_edit(mtcars) str(mtcars_subset)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"data-saving","dir":"Articles","previous_headings":"","what":"6. Data saving","title":"DataEditR","text":"data_edit() automatically return edited data appropriate column classes R object use within R. Character columns converted factors default, can changed setting col_factor = TRUE. edited data can also written file format specifying name file save_as argument specifying name writing function use write_fun. default use write.csv utils package. can also pass additional arguments write function named list write_args. data written file Done button selected. Alternatively, data can saved file selecting either file download buttons highlighted image . button left used save data subset file whilst button right used save entire dataset file.","code":"# Add character column mtcars_new <- cbind(rownames(mtcars), mtcars) colnames(mtcars_new) <- \"car\" # Convert characters to factors mtcars_new <- data_edit(mtcars_new,                         col_factor = TRUE) str(mtcars_new) #> 'data.frame':    32 obs. of  12 variables: #>  $ car : Factor w/ 32 levels \"AMC Javelin\",..: 18 19 5 13 14 31 7 21 20 22 ... #>  $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ... #>  $ cyl : num  6 6 4 6 8 6 8 4 4 6 ... #>  $ disp: num  160 160 108 258 360 ... #>  $ hp  : num  110 110 93 110 175 105 245 62 95 123 ... #>  $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ... #>  $ wt  : num  2.62 2.88 2.32 3.21 3.44 ... #>  $ qsec: num  16.5 17 18.6 19.4 17 ... #>  $ vs  : num  0 0 1 1 0 1 0 1 1 1 ... #>  $ am  : num  1 1 1 0 0 0 0 0 0 0 ... #>  $ gear: num  4 4 4 3 3 3 3 4 4 4 ... #>  $ carb: num  4 4 1 1 2 1 4 2 2 4 ... mtcars_new <- data_edit(mtcars,                         save_as = \"mtcars.csv\",                         write_fun = \"write.table\",                         write_args = list(sep = \",\",                                           row.names = TRUE))"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"complex-user-inputs","dir":"Articles","previous_headings":"","what":"7. Complex user inputs","title":"DataEditR","text":"data_edit() can also used accept complex inputs users inputs can restricted adding columns checkboxes dropdown menus. use feature, options columns must supplied named list col_options argument. important note choose use feature, users unable add remove columns described previously.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"checkboxes","dir":"Articles","previous_headings":"7. Complex user inputs","what":"7.1 Checkboxes","title":"DataEditR","text":"Checkboxes can used obtain TRUE FALSE value inputs users. resulting data value TRUE NA based user input.","code":"data_edit(mtcars,           col_bind = \"fast\",           col_options = list(fast = c(TRUE,FALSE)))"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"dropdown-menus","dir":"Articles","previous_headings":"7. Complex user inputs","what":"7.2 Dropdown menus","title":"DataEditR","text":"Dropdown menus can used help prevent typing errors set number options available column. example, factor levels Treatment-, Treatment-B Treatment-C easier select options dropdown menu instead manually type . Dropdown menus can added way checkboxes.","code":"# Add column for car colour data_edit(mtcars,           col_bind = \"colour\",           col_options = list(colour = c(\"red\",                                         \"blue\",                                         \"orange\",                                         \"green\",                                         \"black\")))"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"dates","dir":"Articles","previous_headings":"7. Complex user inputs","what":"7.3 Dates","title":"DataEditR","text":"Dates can entered interactively selecting relevant day calender. convert column accept interactive date inputs, supply list name column \"date\" option col_options.","code":"data_edit(c(\"date\", \"time\", \"region\", \"temperature\"),           col_options = list(date = \"date\"))"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"passwords","dir":"Articles","previous_headings":"7. Complex user inputs","what":"7.4 Passwords","title":"DataEditR","text":"like keep data entries secret, convert relevant columns accept passwords inputs. data entered per usual, input displayed asterisks conceal entered data. convert column accept password inputs, supply list name column \"password\" option col_options.","code":"data_edit(c(\"date\", \"time\", \"user\", \"password\"),           col_options = list(password = \"password\"))"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"customisation","dir":"Articles","previous_headings":"","what":"8. Customisation","title":"DataEditR","text":"data_edit() designed simple, come customisation options including column stretching, addition logos /titles custom themes.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"stretch-columns-to-fill-page","dir":"Articles","previous_headings":"8. Customisation","what":"8.1 Stretch columns to fill page","title":"DataEditR","text":"like make full use space available , can set col_stretch = TRUE stretch columns fill full width display.","code":"data_edit(mtcars,           col_stretch = TRUE)"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"logo-and-title","dir":"Articles","previous_headings":"8. Customisation","what":"8.2 Logo and title","title":"DataEditR","text":"data_edit() also support adding logo /title data editor. example, wanted use data_edit() within package can customise package logo instructions user title.","code":"car_logo <- 'https://raw.githubusercontent.com/DillonHammill/DataEditR/master/vignettes/DataEditR/DataEditR-Car.png' data_edit(mtcars,           logo = car_logo,           logo_size = 100,           title = \"mtcars\")"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"custom-themes","dir":"Articles","previous_headings":"8. Customisation","what":"8.3 Custom themes","title":"DataEditR","text":"data_edit() makes use bslib package customise appearance data editor. can explore different themes supplying name preset bslib theme theme argument. Alternatively, can create custom bs_theme supply object theme instead.","code":"# Preset theme data_edit(   mtcars,   theme = \"cosmo\" )  # Custom theme library(bslib) custom_theme <- bs_theme(   version = 3,   bootswatch = \"cosmo\" ) data_edit(   mtcars,   theme = custom_theme )"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"rstudio-add-in","dir":"Articles","previous_headings":"","what":"9. RStudio Add-in","title":"DataEditR","text":"DataEditR also ships RStudio add-prefer interact data way. Simply highlight name dataset active script select Interactive Data Editor list Addins RStudio session.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"interactively-edit-googlesheets","dir":"Articles","previous_headings":"","what":"10. Interactively Edit Googlesheets","title":"DataEditR","text":"DataEditR can also used interactively edit googlesheets using googlesheets4. Simply authorise googlesheets, create new sheet, edit data using data_edit() write edited data created sheet.","code":"library(googlesheets4)  # Authorise gs4_auth(   email = \"username@gmail.com\" )  # Create a sheet ss <- gs4_create(   \"mtcars\" )  # Edit data mtcars_new <- data_edit(   mtcars,   save_as = ss,   write_fun = \"write_sheet\",   write_args = list(sheet = \"mtcars\") )"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"exporting-code","dir":"Articles","previous_headings":"","what":"11. Exporting Code","title":"DataEditR","text":"reproducibility, possible export code required generate final edited version data. Simply set code = TRUE within data_edit() print code console. Copying pasting code console recreate edited version data. Alternatively, users can get DataEditR automatically create new R script store code providing name R script code. example, code creates new R script called mtcars_edit.R inserts code required programmatically generate final edited version data.","code":"data_edit(mtcars,           code = TRUE) data_edit(mtcars,           code = \"mtcars_edit.R\")"},{"path":"https://dillonhammill.github.io/DataEditR/articles/DataEditR.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"DataEditR","text":"DataEditR lightweight, powerful intuitive package allow interactive viewing, entry, filtering editing data R. DataEditR also ships separate shiny modules (namely dataInput, dataSelect, dataFilter, dataEdit dataOutput) can used developers shiny applications.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dillon Hammill. Author, maintainer.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hammill D (2022). DataEditR: Interactive Editor Viewing, Entering, Filtering & Editing Data. R package version 0.1.5, https://github.com/DillonHammill/DataEditR.","code":"@Manual{,   title = {DataEditR: An Interactive Editor for Viewing, Entering, Filtering & Editing Data},   author = {Dillon Hammill},   year = {2022},   note = {R package version 0.1.5},   url = {https://github.com/DillonHammill/DataEditR}, }"},{"path":[]},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"dataeditr-","dir":"","previous_headings":"","what":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"Manual data entry editing R can tedious, especially limited coding experience accustomed using software Graphical User Interface (GUI). DataEditR R package built shiny rhandsontable makes easy interactively view, enter, filter edit data. new DataEditR visit https://dillonhammill.github.io/DataEditR/ get started.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"DataEditR can installed CRAN: development version DataEditR can installed directly GitHub: ensure DataEditR works expected, also need install fork rhandsontable:","code":"install.packages(\"DataEditR\") library(devtools) install_github(\"DillonHammill/DataEditR\") devtools::install_github(\"DillonHammill/rhandsontable\")"},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"DataEditR ships series shiny modules, namely dataInput, dataSelect, dataFilter, dataEdit dataOutput wrapped single function called data_edit() create interactive data editor. can use data_edit() standalone application, include relevant modules within shiny applications. Alternatively, DataEditR also ships RStudio add-prefer interact way.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"general-features","dir":"","previous_headings":"Usage","what":"General features:","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"RStudio add-flexible display options (either dialog box, browser RStudio viewer pane) fast rendering quickly view datasets ability interactively create data.frames scratch load tabular data saved file using reading function (e.g. read.csv()) save edited data file using writing function (e.g. write.csv()) return appropriately formatted data R object downstream use code required create edited data can optionally printed console saved file support custom themes bslib package customisable user interface (title, logo modules) row indices always displayed easy navigation switch datasets files without leave application","code":""},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"data-editing-features","dir":"","previous_headings":"Usage","what":"Data editing features:","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"column selection using dataSelect module row selection using dataFilter module edit row column names addition removal rows columns manual column resizing drag fill cells copy paste data external software custom column types simplify user input (e.g. checkboxes dropdown menus) support readonly columns prevent users editing certain columns control column names can edited stretch columns horizontally fill available space programmatically add columns rows data prior loading data editor quick demonstration features can seen , use data_edit() make changes mtcars dataset save result new csv file:","code":"# Load required packages library(DataEditR)  # Save output to R object & csv file mtcars_new <- data_edit(mtcars,                         save_as = \"mtcars_new.csv\")"},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"DataEditR built using fantastic rhandsontable package. DataEditR makes use many features entering editing data, rhandsontable support much sophisticated interactive representations data need . user interface DataEditR inspired editData package great alternative DataEditR.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"Please note DataEditR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"An Interactive Editor for Viewing, Entering, Filtering & Editing Data","text":"use DataEditR work, please cite package follows:","code":"citation(\"DataEditR\") #>  #> To cite package 'DataEditR' in publications use: #>  #>   Dillon Hammill (2022). DataEditR: An Interactive Editor for Viewing, #>   Entering, Filtering & Editing Data. R package version 0.1.5. #>   https://github.com/DillonHammill/DataEditR #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {DataEditR: An Interactive Editor for Viewing, Entering, Filtering & Editing Data}, #>     author = {Dillon Hammill}, #>     year = {2022}, #>     note = {R package version 0.1.5}, #>     url = {https://github.com/DillonHammill/DataEditR}, #>   }"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataEdit.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module for data editing — dataEdit","title":"Shiny module for data editing — dataEdit","text":"Shiny module data editing","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataEdit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module for data editing — dataEdit","text":"","code":"dataEditUI(id)  dataEditServer(   id,   data = reactive(NULL),   col_bind = NULL,   col_edit = TRUE,   col_options = NULL,   col_stretch = FALSE,   col_names = TRUE,   col_readonly = NULL,   col_factor = FALSE,   row_bind = NULL,   row_edit = TRUE,   row_index = reactive(NULL),   quiet = FALSE,   read_fun = \"read.csv\",   read_args = NULL,   ... )"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataEdit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module for data editing — dataEdit","text":"id unique identifier module prevent namespace clashes making multiple calls shiny module. data reactive expression containing array (e.g. data.frame, matrix data.table) vector indicating dimensions array (e.g. c(10,10)) column names construct new template editing. data supplied template 10 rows columns generated editing. col_bind additional columns add data prior loading editor, can either array containing new data, vector containing new column names empty columns named list containing vector new column. col_edit logical indicating whether columns can added removed, set TRUE default. col_options list named valid columns names either c(TRUE, FALSE) checkboxes, vector options dropdowns, \"date\" date input \"password\" password input. col_stretch logical indicating whether columns stretched fill full width display, set FALSE default. col_names logical indicating whether column names can edited vector column names edited, set TRUE default allow editing column names. col_readonly names columns edited. Users able edit values reverted original values. Column names column edited either. col_factor logical indicating whether character columns converted factors prior returning edited data, set FALSE default. row_bind additional rows add data prior loading editor, can either array containing new data, vector containing new row names empty rows named list containing vector new column. row_edit logical indicating whether rows can added removed, set TRUE default. row_index indicates starting index new rows data supplied DataEdit() subset larger dataset, .e. row_index indicates number rows present parental dataset. quiet logical suppress warnings using col_options. read_fun name function use read data file selected, set read.csv default. read_args named list additional arguments pass read_fun reading files. ... additional arguments passed rhandsontable.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataEdit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny module for data editing — dataEdit","text":"reactive expression containing edited data.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataEdit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny module for data editing — dataEdit","text":"Dillon Hammill, Dillon.Hammill@anu.edu.au","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataEdit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny module for data editing — dataEdit","text":"","code":"if (interactive()) {   ui <- fluidPage(     dataInputUI(\"input-1\"),     dataOutputUI(\"output-1\"),     dataEditUI(\"edit-1\")   )    server <- function(input, output, session) {     data_to_edit <- dataInputServer(\"input-1\")     data_edit <- dataEditServer(\"edit-1\",       data = data_to_edit     )     dataOutputServer(\"output-1\",       data = data_edit     )   }    shinyApp(ui, server) }"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module for filtering data — dataFilter","title":"Shiny module for filtering data — dataFilter","text":"Shiny module filtering data","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module for filtering data — dataFilter","text":"","code":"dataFilterUI(id)  dataFilterServer(id, data = reactive(NULL), hide = FALSE, hover_text = NULL)"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module for filtering data — dataFilter","text":"id unique identifier module prevent namespace clashes making multiple calls shiny module. data array wrapped reactive() containing data filtered. hide logical indicating whether data filtering user interface hidden user, set FALSE default. hover_text text display download button user hovers cursor button, set NULL default turn hover text.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny module for filtering data — dataFilter","text":"list reactive objects containing filtered data indices filtered rows.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataFilter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny module for filtering data — dataFilter","text":"Dillon Hammill, Dillon.Hammill@anu.edu.au","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataFilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny module for filtering data — dataFilter","text":"","code":"if (interactive()) {   library(shiny)   library(rhandsontable)   library(shinyjs)    ui <- fluidPage(     useShinyjs(),     dataInputUI(\"input1\"),     dataFilterUI(\"filter1\"),     rHandsontableOutput(\"data1\")   )    server <- function(input,                      output,                      session) {     data_input <- dataInputServer(\"input1\")          # list with slots data and rows (indices)     data_filter <- dataFilterServer(\"filter1\",       data = data_input     )      output$data1 <- renderRHandsontable({       if (!is.null(data_filter$data())) {         rhandsontable(data_filter$data())       }     })        }    shinyApp(ui, server) }"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module for data input — dataInput","title":"Shiny module for data input — dataInput","text":"Shiny module data input","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module for data input — dataInput","text":"","code":"dataInputUI(id, cellWidths = c(\"50%\", \"48%\"))  dataInputServer(   id,   data = NULL,   read_fun = \"read.csv\",   read_args = NULL,   hide = FALSE,   envir = parent.frame() )"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module for data input — dataInput","text":"id unique identifier module prevent namespace clashes making multiple calls shiny module. cellWidths vector length 2 control relative widths fileInput textInput, set c(\"50%\", \"50%\") default. data can either name dataset file character string (e.g. \"mtcars\" \"mtcars.csv\") vector column names (e.g. c(\"\", \"B\", \"C\")) template dimensions (e.g. c(10,10)). read_fun name function use read data file selected, set read.csv default. read_args named list additional arguments pass read_fun reading files. hide logical indicating whether data input user interface hidden user, set FALSE default. envir environment search supplied data, set parent.frame() dataInput default.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataInput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny module for data input — dataInput","text":"Dillon Hammill, Dillon.Hammill@anu.edu.au","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny module for data input — dataInput","text":"","code":"if (interactive()) {   library(shiny)   library(rhandsontable)    ui <- fluidPage(     dataInputUI(\"input1\"),     rHandsontableOutput(\"data1\")   )    server <- function(input,                      output,                      session) {     data_input1 <- dataInputServer(\"input1\")      output$data1 <- renderRHandsontable({       if (!is.null(data_input1())) {         rhandsontable(data_input1())       }     })   }    shinyApp(ui, server) }"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module for data output — dataOutput","title":"Shiny module for data output — dataOutput","text":"Shiny module data output","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module for data output — dataOutput","text":"","code":"dataOutputUI(id, icon = \"download\")  dataOutputServer(   id,   data = reactive(NULL),   save_as = NULL,   write_fun = \"write.csv\",   write_args = NULL,   hide = FALSE,   hover_text = NULL )"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module for data output — dataOutput","text":"id unique identifier module prevent namespace clashes making multiple calls shiny module. icon supplied dataOutputUI control appearance icon displayed download button, set \"download\" default. data object class data.frame wrapped reactive saved file. save_as name file data saved, overrides input file path supplied. write_fun name function use writing data file, set \"write.csv\" default. write_args named list additional arguments pass write_fun reading files. hide logical indicating whether data input user interface hidden user, set FALSE default. hover_text text display download button user hovers cursor button, set NULL default turn hover text.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataOutput.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny module for data output — dataOutput","text":"Dillon Hammill, Dillon.Hammill@anu.edu.au","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataOutput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny module for data output — dataOutput","text":"","code":"if (interactive()) {   library(shiny)   library(rhandsontable)   library(shinyjs)    ui <- fluidPage(     useShinyjs(),     dataInputUI(\"input1\"),     dataOutputUI(\"output1\"),     rHandsontableOutput(\"data1\")   )    server <- function(input,                      output,                      session) {     data_input1 <- dataInputServer(\"input1\")      output$data1 <- renderRHandsontable({       if (!is.null(data_input1())) {         rhandsontable(data_input1())       }     })      dataOutputServer(\"output1\",       data = data_input1     )   }    shinyApp(ui, server) }"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module for selecting data — dataSelect","title":"Shiny module for selecting data — dataSelect","text":"Shiny module selecting data","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module for selecting data — dataSelect","text":"","code":"dataSelectUI(id)  dataSelectServer(id, data = reactive(NULL), hide = FALSE, hover_text = NULL)"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module for selecting data — dataSelect","text":"id unique identifier module prevent namespace clashes making multiple calls shiny module. data array wrapped reactive() containing data filtered. hide logical indicating whether data selection user interface hidden user, set FALSE default. hover_text text display download button user hovers cursor button, set NULL default turn hover text.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSelect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny module for selecting data — dataSelect","text":"list reactive objects containing filtered data indices selected columns.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSelect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny module for selecting data — dataSelect","text":"Dillon Hammill, Dillon.Hammill@anu.edu.au","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSelect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny module for selecting data — dataSelect","text":"","code":"if (interactive()) {   library(shiny)   library(rhandsontable)   library(shinyjs)    ui <- fluidPage(     useShinyjs(),     dataInputUI(\"input1\"),     dataSelectUI(\"select1\"),     rHandsontableOutput(\"data1\")   )    server <- function(input,                      output,                      session) {     data_input <- dataInputServer(\"input1\")      data_select <- dataSelectServer(\"select1\",       data = data_input     )      output$data1 <- renderRHandsontable({       if (!is.null(data_select$data())) {         rhandsontable(data_select$data())       }     })    }    shinyApp(ui, server) }"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSync.html","id":null,"dir":"Reference","previous_headings":"","what":"A shiny module to synchronise datasets — dataSync","title":"A shiny module to synchronise datasets — dataSync","text":"purpose module merge changes made subset data master copy data.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSync.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A shiny module to synchronise datasets — dataSync","text":"","code":"dataSyncUI(id)  dataSyncServer(   id,   data = reactive(NULL),   data_subset = reactive(NULL),   rows = reactive(NULL),   columns = reactive(NULL),   hide = FALSE,   hover_text = NULL )"},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A shiny module to synchronise datasets — dataSync","text":"id unique identifier module prevent namespace clashes making multiple calls shiny module. data master copy data. data_subset subset data altered entries. rows row indices data_subset within data. columns column indices data_subset within data. hide logical indicating whether data synchronisation user interface hidden user, set FALSE default. hover_text text display download button user hovers cursor button, set NULL default turn hover text.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSync.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A shiny module to synchronise datasets — dataSync","text":"Dillon Hammill, Dillon.Hammill@anu.edu.au","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/dataSync.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A shiny module to synchronise datasets — dataSync","text":"","code":"if(interactive()){  library(shiny)  library(rhandsontable)  library(shinyjs)   ui <- fluidPage(    useShinyjs(),    dataInputUI(\"input1\"),    dataFilterUI(\"filter1\"),    dataSyncUI(\"sync1\"),    dataEditUI(\"edit1\")  )   server <- function(input,                     output,                     session) {     values <- reactiveValues(      data = NULL,      data_subset = NULL    )     data_input <- dataInputServer(\"input1\")    data_edit <- dataEditServer(      \"edit1\",      data = data_input    )     data_sync <- dataSyncServer(      \"sync1\",      data = data_input,      data_subset = data_edit,      rows = NULL,      columns = NULL    )    }  shinyApp(ui, server) }"},{"path":"https://dillonhammill.github.io/DataEditR/reference/data_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"An interactive editor for viewing, entering and editing data — data_edit","title":"An interactive editor for viewing, entering and editing data — data_edit","text":"codedata_edit shiny application built rhandsontable designed make easy interactively view, enter edit data without coding. data_edit also wrapper reading writing function make easy interactively update data saved file.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/data_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An interactive editor for viewing, entering and editing data — data_edit","text":"","code":"data_edit(   x = NULL,   col_bind = NULL,   col_edit = TRUE,   col_options = NULL,   col_stretch = FALSE,   col_factor = FALSE,   col_names = TRUE,   col_readonly = NULL,   row_bind = NULL,   row_edit = TRUE,   save_as = NULL,   title = NULL,   logo = NULL,   logo_size = 30,   logo_side = \"left\",   viewer = \"dialog\",   viewer_height = 800,   viewer_width = 1200,   theme = \"yeti\",   read_fun = \"read.csv\",   read_args = NULL,   write_fun = \"write.csv\",   write_args = NULL,   quiet = FALSE,   hide = FALSE,   code = FALSE,   ... )"},{"path":"https://dillonhammill.github.io/DataEditR/reference/data_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An interactive editor for viewing, entering and editing data — data_edit","text":"x matrix, data.frame, data.table name csv file edit. Tibbles also supported coerced data.frames. empty table can created specifying dimensions vector form c(nrow, ncol) names columns include template. col_bind additional columns add data prior loading editor, can either array containing new data, vector containing new column names empty columns named list containing vector new column. col_edit logical indicating whether columns can added removed, set TRUE default. col_options named list containing options columns use dropdown menus, dates, checkboxes passwords. col_stretch logical indicating whether columns stretched fill full width display, set FALSE default. col_factor logical indicating whether character columns converted factors prior returning edited data, set FALSE default. col_names logical indicating whether column names can edited vector column names edited, set TRUE default allow editing column names. col_readonly names columns edited. Users able edit values reverted original values. Column names column edited either. row_bind additional rows add data prior loading editor, can either array containing new data, vector containing new row names empty rows named list containing vector new column. row_edit logical indicating whether rows can added removed, set TRUE default. save_as name csv file edited data saved. title optional title include data editor. logo optional package logo include title data editor, must supplied path logo png. logo_size width logo pixels, set 30 pixels default. logo_side can either \"left\" \"right\" determine position logo relative title, set \"left\" default. viewer can either \"dialog\", \"browser\" \"pane\" open application dialog box, browser RStudio viewer pane. First letter abbreviations allowed, set \"dialog\" default. viewer_height numeric control height viewer pixels viewer set \"dialog\", set 800 default. viewer_width numeric control width viewer pixels viewer set \"dialog\", set 1200 default. theme valid shinytheme name, set \"yeti\" default. read_fun name function use read data x name file, set read.csv default. read_args named list additional arguments pass read_fun. write_fun name function use write edited version x file, set write.csv default. requirement first argument accepts edited data second argument accepts file name supplied save_as. write_args named list additional arguments pass write_fun. quiet logical indicating whether messages suppressed, set FALSE default. hide logical indicating whether dataInput dataOutput modules visible user within application. hide = FALSE save_as specified, edited data written file application closed. code logical indicating whether code required generate edited data printed console, set FALSE default. Alternatively, users can supply name R script create store code. ... use.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/data_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An interactive editor for viewing, entering and editing data — data_edit","text":"edited data matrix data.frame.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/data_edit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"An interactive editor for viewing, entering and editing data — data_edit","text":"Dillon Hammill, Dillon.Hammill@anu.edu.au","code":""},{"path":"https://dillonhammill.github.io/DataEditR/reference/data_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An interactive editor for viewing, entering and editing data — data_edit","text":"","code":"if(interactive()) {    data_edit(mtcars)  }"},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-015","dir":"Changelog","previous_headings":"","what":"DataEditR 0.1.5","title":"DataEditR 0.1.5","text":"Make switch bslib flexibility setting custom themes data_edit(). Users can now supply bs_theme object theme argument fully customise appearance data_edit() UI. Fix handling numeric row names ensure maintenance row indices relative master copy. Improved handling highlighted data_edit() calls within RStudio.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-014","dir":"Changelog","previous_headings":"","what":"DataEditR 0.1.4","title":"DataEditR 0.1.4","text":"CRAN release: 2021-12-10 Fix header location scroll. Make sure column names retained loading empty datasets within dataInput. Add checks empty data within dataInput dataEdit ensure supplied data always contains least single row column. Add support writing data googlesheets calling write_fun application closes. Fix data_edit() ensure don’t search data RStudio addin RStudio use.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-013","dir":"Changelog","previous_headings":"","what":"DataEditR 0.1.3","title":"DataEditR 0.1.3","text":"CRAN release: 2021-07-09 Display hints user hovers cursor buttons. Make sure R objects containing . can loaded data editor. Turn highlighting columns rows. Add dataSync module handle synchronisation edited data subset complete dataset. Improved support tibbles. Fix dataFilter ensure logic levels always updated column selection changes.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-012","dir":"Changelog","previous_headings":"","what":"DataEditR 0.1.2","title":"DataEditR 0.1.2","text":"CRAN release: 2021-05-21 data_edit() can now export code required generate final edited version data R script. Update vignette website demonstrate usage code argument. Make sure search correct environment creating templates reading files.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-011","dir":"Changelog","previous_headings":"","what":"DataEditR 0.1.1","title":"DataEditR 0.1.1","text":"CRAN release: 2021-05-10 Ensure dataInput searches data outside data_edit(). Prevent loading highlighted data object RStudio data supplied data_edit() directly. Allow saving write_fun whenever save_as supplied.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-010","dir":"Changelog","previous_headings":"","what":"DataEditR 0.1.0","title":"DataEditR 0.1.0","text":"Make switch GitHub Actions continuous integration. Update dataSelect dataFilter examples now return values lists instead reactive expressions.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-009","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.9","title":"DataEditR 0.0.9","text":"CRAN release: 2020-12-12 Minor improvements ensure original data retained new columns added renamed. Requires installation rhandsontable install_github(\"DillonHammill/rhandsontable\").","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-008","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.8","title":"DataEditR 0.0.8","text":"Add dataSelect dataFilter modules filter data, Add Sync button update entire dataset changes made subset. Data still exported whole new button added future export subsetted data. Add cut button allow return subsetted data upon closing application Done button.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-007","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.7","title":"DataEditR 0.0.7","text":"Create dataInput, dataEdit dataOutput modules. Create RStudio addin interactively edit data. Update user interface allow interactive file selection input R data objects. Add new viewer options open data editor dialog box, browser RStudio viewer pane. can controlled viewer argument set use dialog box default. Additional arguments viewer_height viewer_width added allow control dimensions dialog boxes. Add cancel button top left return data unchanged. Add new hide argument optionally display dataInput dataOutput modules. functionality requires shinyjs package. hide argument allows users maximize space available display data also prevent users interacting modules. still possible save data file dataOutput module visible, simply supplying file name save_as argument data_edit(). Improve handling row names dataEdit module. Add helper function handle generation templates based inputs data_edit() make easier create data.frames scratch. default template size increased 10 x 10 grid. Add logo_side argument control whether logo placed left right title. Add new code argument data_edit() print code required create edited data console.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-006","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.6","title":"DataEditR 0.0.6","text":"Add ability pass column names data_edit() construct template data.frame pre-defined column names.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-005","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.5","title":"DataEditR 0.0.5","text":"CRAN release: 2020-08-12 Fix row indices rows added removed. Improve handling duplicate row indices case accidental editing.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-004","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.4","title":"DataEditR 0.0.4","text":"Add col_readonly argument prevent users editing values column names certain columns. Prevent error column clicked edited.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-003","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.3","title":"DataEditR 0.0.3","text":"Add col_names argument allow control column names can edited user.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-002","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.2","title":"DataEditR 0.0.2","text":"Fixes CRAN submission.","code":""},{"path":"https://dillonhammill.github.io/DataEditR/news/index.html","id":"dataeditr-001","dir":"Changelog","previous_headings":"","what":"DataEditR 0.0.1","title":"DataEditR 0.0.1","text":"Add data_edit() allow interactive data viewing, entry editing.","code":""}]
