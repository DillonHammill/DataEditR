% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_edit.R
\name{data_edit}
\alias{data_edit}
\title{Interactively edit data.frames, matrices or tabular data files}
\usage{
data_edit(
  x,
  col_bind = NULL,
  col_edit = TRUE,
  col_options = NULL,
  col_stretch = FALSE,
  row_bind = NULL,
  row_edit = TRUE,
  save_as = NULL,
  title = NULL,
  logo = NULL,
  logo_size = 100,
  viewer = TRUE,
  theme = "yeti",
  quiet = FALSE,
  read_fun = "read.csv",
  read_args = NULL,
  write_fun = "write.csv",
  write_args = NULL,
  ...
)
}
\arguments{
\item{x}{a matrix, data.frame, data.table or the name of a csv file to
edit.Tibble are also supported but will be coerced to data.frames. An
empty table can be created by specifyng the dimensions in a vector of the
form \code{c(nrow, ncol)}.}

\item{col_bind}{additional columns to add to the data prior to loading into
editor.}

\item{col_edit}{logical indicating whether columns can be added or removed,
set to TRUE by default.}

\item{col_options}{named list containing the options for columns that use
dropdown menus or checkboxes.}

\item{col_stretch}{logical indicating whether columns should be stretched to
fill the full width of the display, set to FALSE by default.}

\item{row_bind}{additional rows to add to the data prior to loading into
editor.}

\item{row_edit}{logical indicating whether rows can be added or removed, set
to TRUE by default.}

\item{save_as}{name of a csv file to which the edited data should be saved.}

\item{title}{optional title to include above the data editor.}

\item{logo}{optional package logo to include in title above the data editor,
must be supplied as path to logo png.}

\item{logo_size}{width of the logo in pixels, set to 100 pixels by default.}

\item{viewer}{logical indicating whether the data editor should be invoked in
the RStudio viewer pane, set to TRUE by default.}

\item{theme}{valid shinytheme name, set to "yeti" by default.}

\item{quiet}{logical indicating whether messages should be suppressed, set to
FALSE by default.}

\item{read_fun}{name of the function to use to read in the data when \code{x}
is the name of a file, set to \code{read.csv} by default.}

\item{read_args}{a named list of additional arguments to pass to
\code{read_fun}.}

\item{write_fun}{name of the function to use to write the edited version of
\code{x} to a file, set to \code{write.csv} by default. Only requirement is
that the first argument accepts the edited data and the second argument
accepts the file name supplied to \code{save_as}.}

\item{write_args}{a named list of additional arguments to pass to
\code{write_fun}.}

\item{...}{additional arguments passed to both \code{read_fun} and
\code{write_fun}, such as \code{sep}. Arguments that are shared by
\code{read_fun} and \code{write_fun} can be supplied separately to these
functions using the \code{read_args} and \code{write_args} arguments. For
example, this becomes particularly important when specifying
\code{row.names} arguments.}
}
\value{
edited matrix-like object.
}
\description{
Interactively edit data.frames, matrices or tabular data files
}
\examples{
\dontrun{
# Edit data.frame save to csv
data_edit(mtcars,
  save_as = "mtcars-update.csv"
)

# Edit csv file
data_edit("mtcars-update.csv")
}

}
\author{
Dillon Hammill, \email{Dillon.Hammill@anu.edu.au}
}
